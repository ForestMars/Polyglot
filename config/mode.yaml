# config/mode.yaml
# Polyglut Application Mode Configuration

# Application mode - determines how the app operates and connects
# Options: standalone, local_network, cloud, hybrid
mode: standalone

# Global services configuration (independent of mode)
services:
  # Main application
  app:
    enabled: true
    port: 8080
    auto_start: true
  # Merge queue server (conflict resolution)
  merge_queue_server:
    enabled: true
    port: 4001
    auto_start: true
    required_for_modes: ["local_network", "hybrid"]
    optional_for_modes: ["standalone"]
    disabled_for_modes: ["cloud"]
  # MCP services (independently selectable)
  mcp_services:
    # File system operations
    filesystem:
      enabled: true
      port: 9001
      auto_start: true
    # Database operations
    database:
      enabled: false
      port: 9002
      auto_start: false
    # Web scraping
    web_scraper:
      enabled: false
      port: 9003
      auto_start: false
    # Code execution
    code_runner:
      enabled: false
      port: 9004
      auto_start: false

# Standalone mode configuration (single device, no network required)
standalone:
  enabled: true
  # Local model providers
  providers:
    - ollama
    - llamacpp
    - openai-compatible
  # Storage settings
  storage:
    type: indexeddb
    backup_to_file: false
  # API endpoints for local services
  endpoints:
    ollama: "http://localhost:11434"
    llamacpp: "http://localhost:8080"
    openai_compatible: "http://localhost:1234"
    mcp_server: "http://localhost:9001"
    merge_queue_server: "http://localhost:4001"

# Local network mode configuration (shared across LAN devices)
local_network:
  enabled: false

  # Network discovery
  discovery:
    mdns_enabled: true
    broadcast_port: 8765
    service_name: "_polyglut._tcp"
  # Shared providers across network
  providers:
    - ollama
    - llamacpp
    - shared_models
  # Network storage settings
  storage:
    type: distributed
    sync_across_devices: true

# Cloud mode configuration
cloud:
  enabled: false
  # Cloud providers
  providers:
    - openai
    - anthropic
    - mistral
    - google
  # Remote storage/sync settings
  storage:
    sync_enabled: true
    backend_url: ""

# Hybrid mode configuration
hybrid:
  enabled: false
  # Primary mode for different operations
  primary_providers:
    chat: standalone
    storage: standalone
    sync: local_network
  # Fallback chain
  fallback_order:
    - standalone
    - local_network
    - cloud

# Service health checks
health_checks:
  enabled: true
  interval: 30000 # milliseconds
  endpoints:
    app: "/health"
    merge_queue_server: "/status"
    # MCP services use standard health endpoint
    mcp_filesystem: "/health"
    mcp_database: "/health"
    mcp_web_scraper: "/health"
    mcp_code_runner: "/health"

# Version and compatibility
version: "0.1.3"
config_version: "1.0"
